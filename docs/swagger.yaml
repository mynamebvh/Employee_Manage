basePath: /api/v1
definitions:
  auth.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  auth.MessageResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  auth.RequestLogin:
    properties:
      email:
        example: mynamebvh@gmail.com
        type: string
      password:
        example: hoangdz
        type: string
    required:
    - email
    - password
    type: object
  auth.RequestResetPassword:
    properties:
      code:
        type: string
      new_password:
        type: string
    type: object
  auth.RequestSendCodeResetPassword:
    properties:
      email:
        example: mynamebvh@gmail.com
        type: string
    required:
    - email
    type: object
  calendar.MessageResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  department.MessageResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  department.NewDepartment:
    properties:
      address:
        example: Tầng 3
        type: string
      department_code:
        example: D5
        type: string
      name:
        example: Phòng D5
        type: string
      status:
        example: true
        type: boolean
    required:
    - address
    - department_code
    - name
    - status
    type: object
  dto.QueryResultGetMe:
    properties:
      address:
        type: string
      birthday:
        type: string
      department_name:
        type: string
      email:
        type: string
      employee_code:
        type: string
      full_name:
        type: string
      gender:
        type: boolean
      phone:
        type: string
      user_id:
        type: integer
    type: object
  models.Department:
    properties:
      address:
        type: string
      department_code:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: boolean
    type: object
  models.User:
    properties:
      address:
        type: string
      birthday:
        type: string
      department_id:
        type: integer
      email:
        type: string
      employee_code:
        type: string
      full_name:
        type: string
      gender:
        type: boolean
      id:
        type: integer
      phone:
        type: string
    type: object
  user.MessageResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  user.NewUser:
    properties:
      address:
        example: Hoai Duc, Ha Noi
        type: string
      birthday:
        example: "2022-10-07T08:43:38+00:00"
        type: string
      department_id:
        example: 1
        type: integer
      email:
        example: mynamebvh@gmail.com
        type: string
      full_name:
        example: Bui Viet Hoang
        type: string
      gender:
        example: true
        type: boolean
      password:
        example: hoangdz
        type: string
      phone:
        example: "0979150931"
        type: string
      role_id:
        example: 1
        type: integer
    required:
    - address
    - birthday
    - department_id
    - email
    - full_name
    - gender
    - password
    - phone
    - role_id
    type: object
  user.RequestChangePassword:
    properties:
      new_password:
        example: hoangdz1
        type: string
      old_password:
        example: hoangdz
        type: string
    required:
    - new_password
    - old_password
    type: object
host: localhost:8080
info:
  contact:
    email: mynamebvh@gmail.com
    name: Bui Viet Hoang
  description: Documentation's Employee Manager
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Employee Manager
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login account
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/auth.MessageResponse'
      summary: Login
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset pasword
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.RequestResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/auth.MessageResponse'
      summary: Reset password
      tags:
      - auth
  /auth/send-code:
    post:
      consumes:
      - application/json
      description: Send code to mail
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.RequestSendCodeResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/auth.MessageResponse'
      summary: Send code to mail
      tags:
      - auth
  /calendars/checkin:
    post:
      consumes:
      - application/json
      description: Checkin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/calendar.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/calendar.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/calendar.MessageResponse'
      summary: Checkin
      tags:
      - calendar
  /calendars/checkout:
    post:
      consumes:
      - application/json
      description: Checkout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/calendar.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/calendar.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/calendar.MessageResponse'
      summary: Checkout
      tags:
      - calendar
  /departments:
    post:
      consumes:
      - application/json
      description: Create new department on the system
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/department.NewDepartment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Department'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/department.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/department.MessageResponse'
      summary: Create new department
      tags:
      - department
  /departments/{department_id}:
    delete:
      description: Delete department by ID on the system
      parameters:
      - description: id of department
        in: path
        name: department_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/department.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/department.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/department.MessageResponse'
      summary: Delete department by ID
      tags:
      - department
    get:
      description: Get department by ID on the system
      parameters:
      - description: id of department
        in: path
        name: department_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Department'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/department.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/department.MessageResponse'
      summary: Get department by ID
      tags:
      - department
    put:
      description: Update department by ID on the system
      parameters:
      - description: id of department
        in: path
        name: department_id
        required: true
        type: integer
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/department.NewDepartment'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Department'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/department.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/department.MessageResponse'
      summary: Update department by ID
      tags:
      - department
  /users:
    post:
      consumes:
      - application/json
      description: Create new user on the system
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.NewUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.MessageResponse'
      summary: Create New User
      tags:
      - user
  /users/{user_id}:
    delete:
      description: Delete user by ID on the system
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.MessageResponse'
      summary: Delete user by ID
      tags:
      - user
    get:
      description: Get user by ID on the system
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.MessageResponse'
      summary: Get user by ID
      tags:
      - user
    put:
      description: Update user by ID on the system
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        type: integer
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.NewUser'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.MessageResponse'
      summary: Update user by ID
      tags:
      - user
  /users/change-password:
    put:
      description: Change password on the system
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.RequestChangePassword'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.MessageResponse'
      summary: Change password
      tags:
      - user
  /users/me:
    get:
      description: Get info user current on the system
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.QueryResultGetMe'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.MessageResponse'
      summary: Get info user current
      tags:
      - user
swagger: "2.0"
